package lagern;


/**
* lagern/LagerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from lager.idl
* Mittwoch, 3. April 2013 16:15 Uhr MESZ
*/

public abstract class LagerPOA extends org.omg.PortableServer.Servant
 implements lagern.LagerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getFachliste", new java.lang.Integer (0));
    _methods.put ("neu", new java.lang.Integer (1));
    _methods.put ("loeschen", new java.lang.Integer (2));
    _methods.put ("hole", new java.lang.Integer (3));
    _methods.put ("monitorHinzufuegen", new java.lang.Integer (4));
    _methods.put ("monitorEntfernen", new java.lang.Integer (5));
    _methods.put ("exit", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  //holt die aktuelle Fachliste, Rückgabewert soll die Gesamtzahl der Faecher angeben
       case 0:  // lagern/Lager/getFachliste
       {
         lagern.TFachlisteHolder fachliste = new lagern.TFachlisteHolder ();
         int $result = (int)0;
         $result = this.getFachliste (fachliste);
         out = $rh.createReply();
         out.write_long ($result);
         lagern.TFachlisteHelper.write (out, fachliste.value);
         break;
       }

       case 1:  // lagern/Lager/neu
       {
         try {
           String name = in.read_string ();
           lagern.Fach $result = null;
           $result = this.neu (name);
           out = $rh.createReply();
           lagern.FachHelper.write (out, $result);
         } catch (lagern.LagerPackage.EAlreadyExists $ex) {
           out = $rh.createExceptionReply ();
           lagern.LagerPackage.EAlreadyExistsHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // lagern/Lager/loeschen
       {
         try {
           String name = in.read_string ();
           this.loeschen (name);
           out = $rh.createReply();
         } catch (lagern.LagerPackage.ENotFound $ex) {
           out = $rh.createExceptionReply ();
           lagern.LagerPackage.ENotFoundHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // lagern/Lager/hole
       {
         try {
           String name = in.read_string ();
           lagern.Fach $result = null;
           $result = this.hole (name);
           out = $rh.createReply();
           lagern.FachHelper.write (out, $result);
         } catch (lagern.LagerPackage.ENotFound $ex) {
           out = $rh.createExceptionReply ();
           lagern.LagerPackage.ENotFoundHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // lagern/Lager/monitorHinzufuegen
       {
         lagern.Monitor theMonitor = lagern.MonitorHelper.read (in);
         this.monitorHinzufuegen (theMonitor);
         out = $rh.createReply();
         break;
       }

       case 5:  // lagern/Lager/monitorEntfernen
       {
         lagern.Monitor theMonitor = lagern.MonitorHelper.read (in);
         this.monitorEntfernen (theMonitor);
         out = $rh.createReply();
         break;
       }


  //Dient zum Beenden der Lageranwendung. Sorgt dafuer, dass das Lager und alle registrierten Monitore beendet werden.
       case 6:  // lagern/Lager/exit
       {
         this.exit ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:lagern/Lager:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Lager _this() 
  {
    return LagerHelper.narrow(
    super._this_object());
  }

  public Lager _this(org.omg.CORBA.ORB orb) 
  {
    return LagerHelper.narrow(
    super._this_object(orb));
  }


} // class LagerPOA
